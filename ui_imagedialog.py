# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\imagedialog.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_ImageDialog(object):
    def setupUi(self, ImageDialog):
        ImageDialog.setObjectName("ImageDialog")
        ImageDialog.resize(764, 287)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/ushma/Desktop/Untitled.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        ImageDialog.setWindowIcon(icon)
        self.selectfile = QtWidgets.QPushButton(ImageDialog)
        self.selectfile.setEnabled(False)
        self.selectfile.setGeometry(QtCore.QRect(200, 70, 351, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(True)
        font.setWeight(75)
        self.selectfile.setFont(font)
        self.selectfile.setObjectName("selectfile")
        self.taskbox = QtWidgets.QComboBox(ImageDialog)
        self.taskbox.setGeometry(QtCore.QRect(40, 20, 671, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(True)
        font.setWeight(75)
        self.taskbox.setFont(font)
        self.taskbox.setObjectName("taskbox")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.taskbox.addItem("")
        self.plotnow = QtWidgets.QPushButton(ImageDialog)
        self.plotnow.setEnabled(False)
        self.plotnow.setGeometry(QtCore.QRect(200, 140, 351, 41))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.plotnow.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(True)
        font.setWeight(75)
        self.plotnow.setFont(font)
        self.plotnow.setObjectName("plotnow")
        self.quitbutton = QtWidgets.QPushButton(ImageDialog)
        self.quitbutton.setGeometry(QtCore.QRect(330, 240, 93, 28))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.quitbutton.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(True)
        font.setWeight(75)
        self.quitbutton.setFont(font)
        self.quitbutton.setObjectName("quitbutton")
        self.msgbox = QtWidgets.QLabel(ImageDialog)
        self.msgbox.setGeometry(QtCore.QRect(30, 190, 271, 41))
        self.msgbox.setText("")
        self.msgbox.setObjectName("msgbox")
        self.actionclick = QtWidgets.QAction(ImageDialog)
        self.actionclick.setObjectName("actionclick")

        self.retranslateUi(ImageDialog)
        QtCore.QMetaObject.connectSlotsByName(ImageDialog)

    def retranslateUi(self, ImageDialog):
        _translate = QtCore.QCoreApplication.translate
        ImageDialog.setWindowTitle(_translate("ImageDialog", "Data Vis Tool"))
        self.selectfile.setText(_translate("ImageDialog", "Select File"))
        self.taskbox.setItemText(0, _translate("ImageDialog", "Select Task"))
        self.taskbox.setItemText(1, _translate("ImageDialog", "Compare timeliness of submissions for all topics"))
        self.taskbox.setItemText(2, _translate("ImageDialog", "Characterize behaviour of submission timelines for each group"))
        self.taskbox.setItemText(3, _translate("ImageDialog", "Visualize timeliness of each user across the semester"))
        self.taskbox.setItemText(4, _translate("ImageDialog", "Visualize timeliness of First posts aggregated by group"))
        self.taskbox.setItemText(5, _translate("ImageDialog", "Visualize timeliness of First posts aggregated by Topic"))
        self.taskbox.setItemText(6, _translate("ImageDialog", "Trends in variation of message length in Groups with time for First postings and replies"))
        self.taskbox.setItemText(7, _translate("ImageDialog", "Trends in variation of message length by Topics with time for First postings and replies"))
        self.taskbox.setItemText(8, _translate("ImageDialog", "Visualize the flow of user interaction - Who got the most responses?"))
        self.taskbox.setItemText(9, _translate("ImageDialog", "Visualize the conversation by grouping users who had similar number of responses"))
        self.plotnow.setText(_translate("ImageDialog", "Run"))
        self.quitbutton.setText(_translate("ImageDialog", "Quit"))
        self.actionclick.setText(_translate("ImageDialog", "click"))

